/* This class is generated by ObjCTemplar, please do not modify it */


#import "SCExampleClass.h"
#import "SCValidator.h"
#import "SCImmutableCopyingHelpers.h"
#import "SCPropertyChangesTracker.h"
#import "SCExampleDeliveredClass.h"
#import "SCExampleSetContainer.h"

#import "SCNonemptyStringValidator.h"
#import "SCExampleArrayValidator.h"

@interface SCExampleClass () {
    @protected
    NSUInteger _SC_hash;
}

- (instancetype)initWithBuilder:(SCExampleClassBuilder *)builder error:(NSError **)error;
+ (BOOL)_validateID:(NSString *)ID forObject:(SCExampleClass *)object error:(NSError **)error;
+ (BOOL)_validateComponents:(NSArray<NSString *> *)components forObject:(SCExampleClass *)object error:(NSError **)error;

@end

@implementation SCExampleClass

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wobjc-designated-initializers"
- (instancetype)init  {
    NSAssert(NO, @"Forbidden");
    @throw [NSException exceptionWithName:@"Forbidden" reason:@"This object have its own immutable fields" userInfo:nil];
}
#pragma clang diagnostic pop

- (instancetype)initWithID:(NSString * _Nonnull)ID error:(NSError **)error  {
    
    if (![SCExampleClass _validateID:ID forObject:nil error:error]) { return nil; }
    
    if (self = [super init]) { 
        _ID = SCObjectImmutableCopy(ID, error);
    }

    NSAssert(self != nil, @"Internal error: object was not created");
    return self;
}

- (instancetype)initWithExampleClass:(SCExampleClass * _Nonnull)exampleClass  {
    NSError * __autoreleasing e = nil, * __autoreleasing * error = &e;
    NSParameterAssert(exampleClass != nil);

    if (self = [super init]) { 
        _ID = SCObjectImmutableCopy(exampleClass->_ID, error);
        _objectDescription = SCObjectImmutableCopy(exampleClass->_objectDescription, error);
        _components = SCObjectImmutableCopy(exampleClass->_components, error);
        _counter = exampleClass->_counter;
    }

    NSAssert(e == nil, @"Internal error: error flag was set");
    NSAssert(self != nil, @"Internal error: object was not created");
    return self;
}


- (instancetype)initWithCoder:(NSCoder *)decoder {
    NSError *error = nil;
    
    NSString *ID = [decoder decodeObjectForKey:@"ID"];
    
    if (self = [self initWithID:ID error:&error]) {
        _objectDescription = [decoder decodeObjectForKey:@"objectDescription"];
        _components = [decoder decodeObjectForKey:@"components"];
        _counter = [decoder decodeIntForKey:@"counter"];
        
    }
    return self;
}

- (void)encodeWithCoder:(NSCoder *)encoder {
    [encoder encodeObject:_ID forKey:@"ID"];
    [encoder encodeObject:_objectDescription forKey:@"objectDescription"];
    [encoder encodeObject:_components forKey:@"components"];
    [encoder encodeInt:_counter forKey:@"counter"];
    
}



- (instancetype _Nonnull)initWithBuilder:(SCExampleClassBuilder * _Nonnull)builder error:(NSError **)error  {
    
    NSParameterAssert(builder != nil);
    if (![SCExampleClass _validateID:builder.ID forObject:nil error:error]) { return nil; }
    
    if (self = [self initWithID:builder.ID error:error]) { 
        _objectDescription = SCObjectImmutableCopy(builder.objectDescription, error);
        _components = SCObjectImmutableCopy(builder.components, error);
        _counter = builder.counter;
    }

    NSAssert(self != nil, @"Internal error: object was not created");
    return self;
}

+ (SCExampleClassBuilder * _Nonnull)builder {
    SCExampleClassBuilder *builder = [[SCExampleClassBuilder alloc] init];

    NSAssert(builder != nil, @"Internal error: builder was not created");
    return builder;
}


- (id)copyWithZone:(NSZone *)zone {
    return self;
}

- (BOOL)isImmutable {
    return YES;
}

- (id)immutableCopyWithError:(NSError **)error {
    SCExampleClass *exampleClass = self;
    return [[SCExampleClass alloc] initWithExampleClass:exampleClass];
}

- (NSUInteger)SC_hash {
    if (!_SC_hash) {
        _SC_hash = SCEnumerableHash(@[ _ID, _objectDescription, _components, @(_counter),  ], YES);
    }
    return _SC_hash;
}

- (NSUInteger)hash {
    return self.SC_hash;
}


- (id)mutableCopyWithZone:(NSZone *)zone {
    SCExampleClass *exampleClass = self;
    exampleClass = [[SCMutableExampleClass allocWithZone:zone] initWithExampleClass:exampleClass];

    NSAssert(exampleClass != nil, @"Internal error: object was not copied");
    return exampleClass;
} 

+ (BOOL)_validateID:(NSString *)ID forObject:(SCExampleClass *)object error:(NSError **)error {
    for (NSObject<SCValidator> *validator in @[ [[SCNonemptyStringValidator alloc] init],  ]) {
        if (![validator validateValue:ID ofProperty:@"ID" forObject:object error:error]) {
            return NO;
        }
    }
    return YES;
}

+ (BOOL)_validateComponents:(NSArray<NSString *> *)components forObject:(SCExampleClass *)object error:(NSError **)error {
    for (NSObject<SCValidator> *validator in @[ [[SCExampleArrayValidator alloc] init],  ]) {
        if (![validator validateValue:components ofProperty:@"components" forObject:object error:error]) {
            return NO;
        }
    }
    return YES;
}



@dynamic ID;

- (NSString * _Nonnull)internalID {
    return _ID;
}

@dynamic objectDescription;

- (NSString * _Nullable)objectDescription {
    return _objectDescription;
}

@dynamic components;

- (NSArray<NSString *> * _Nullable)components {
    return _components;
}

@dynamic counter;

- (int)counter {
    return _counter;
}

@end


@interface SCMutableExampleClass () {
    NSObject<SCTracking> * _Nonnull _tracker;
}

@end

@implementation SCMutableExampleClass

- (instancetype)initWithID:(NSString * _Nonnull)ID  error:(NSError **)error  {
    if (self = [super initWithID:ID  error:error]) {
        _tracker = [SCPropertyChangesTracker trackerWithTrackingObject:self mode:SCPropertyChangesTrackerManualMode];
    }

    NSAssert(self != nil, @"Internal error: object was not created");
    return self;
}

- (instancetype)initWithExampleClass:(SCExampleClass * _Nonnull)exampleClass  {
    NSParameterAssert(exampleClass != nil);

    if (self = [super initWithExampleClass:exampleClass]) {
        if ([exampleClass isKindOfClass:[SCMutableExampleClass class]]) {
            _tracker = [((SCMutableExampleClass *)exampleClass)->_tracker copy];
        } else {
            _tracker = [SCPropertyChangesTracker trackerWithTrackingObject:self mode:SCPropertyChangesTrackerManualMode];
        }
    }

    NSAssert(self != nil, @"Internal error: object was not created");
    return self;
}

- (id<SCTracker>)changesTracker {
    return _tracker;
}


- (id)copyWithZone:(NSZone *)zone {
    SCMutableExampleClass *exampleClass = self;
    return [[SCMutableExampleClass allocWithZone:zone] initWithExampleClass:exampleClass];
}

- (BOOL)isImmutable {
    return NO;
}

@dynamic objectDescription;

- (void)applyObjectDescription:(NSString * _Nullable)objectDescription {
    
    if (![_objectDescription isEqual:objectDescription]) {
        [_tracker property:@"objectDescription" beforeChangeValue:_objectDescription];
        [self willChangeValueForKey:@"objectDescription"];
        _objectDescription = objectDescription;
        _SC_hash = 0;
        [self didChangeValueForKey:@"objectDescription"];
        [_tracker property:@"objectDescription" afterChangeValue:_objectDescription];
    }
}



@dynamic components;

- (void)setComponents:(NSArray<NSString *> * _Nullable)components error:(NSError **)error{
    if (![SCExampleClass _validateComponents:components forObject:self error:error]) { return; }
    
    if (![_components isEqual:components]) {
        [_tracker property:@"components" beforeChangeValue:_components];
        [self willChangeValueForKey:@"components"];
        _components = components;
        _SC_hash = 0;
        [self didChangeValueForKey:@"components"];
        [_tracker property:@"components" afterChangeValue:_components];
    }
}



- (void)addComponent:(NSString *)component error:(NSError **)error {
    NSMutableArray *components = [self.components mutableCopy] ?: [NSMutableArray array];
    [components addObject:component];
    [self setComponents:components error:error];
}

- (void)insertComponent:(NSString *)component atIndex:(NSUInteger)index error:(NSError **)error {
    NSMutableArray *components = [self.components mutableCopy] ?: [NSMutableArray array];
    [components insertObject:component atIndex:index];
    [self setComponents:components error:error];
}

- (void)removeComponent:(NSString *)component error:(NSError **)error {
    NSMutableArray *components = [self.components mutableCopy];
    [components removeObject:component];
    [self setComponents:components error:error];
}



@dynamic counter;

- (void)setCounter:(int)counter {
    
    if (_counter != counter) {
        [_tracker property:@"counter" beforeChangeValue:@(_counter)];
        [self willChangeValueForKey:@"counter"];
        _counter = counter;
        _SC_hash = 0;
        [self didChangeValueForKey:@"counter"];
        [_tracker property:@"counter" afterChangeValue:@(_counter)];
    }
}



@end



@implementation SCExampleClassBuilder

@synthesize ID = _ID;

@synthesize objectDescription = _objectDescription;

@synthesize components = _components;

@synthesize counter = _counter;

- (SCExampleClass *)buildWithError:(NSError **)error {
    return [[SCExampleClass alloc] initWithBuilder:self error:error];
}

@end

/* This class is generated by ObjCTemplar, please do not modify it */
{% assign error_definition = 'error:(NSError * _Nullable __autoreleasing * _Nullable)error' %}
{{ class.imports }}
{% if class.supports_track_changes? %}
#import {{ interfaces['tracking']['in'] }}{% endif %}
#import {{ interfaces['immutable copy']['in'] }}

{% for other_class in other_classes %}@class {{ other_class }};
{% endfor %}{% if class.supports_builder? %}@class {{ class.class_name }}Builder;{% endif %}

@protocol {{ class.class_name }} {{ class.protocols }}

{% for property in class.own_properties %}@property ({{property.readonly_attributes}}) {{ property.type_qualified }} {{ property.name }};
{% endfor %}
@end

@interface {{ class.class_name }} : {{ class.parent.class_name }} <{{ class.class_name }}> {
    @protected
{% for property in class.own_properties %}    {{ property.type_qualified }} {{ property.field_name }};
{% endfor %} }

- (instancetype {% if class.builder_could_fail? %}_Nullable{% else %}_Nonnull{% endif %})init{{ class.prim_ctor_definition }}{% if class.constructor_could_fail? %}error:(NSError * _Nullable __autoreleasing * _Nullable)error {% endif %}NS_DESIGNATED_INITIALIZER;

- (instancetype _Nonnull)init{{ class.copy_ctor_definition }}NS_DESIGNATED_INITIALIZER;

{% if class.supports_builder? %}// Builder support
+ ({{ class.class_name }}Builder * _Nonnull)builder;
{% endif %}
@end

{% if class.supports_mutable_copy? %}@protocol {{ class.mutable_class_name }} {{ class.mutable_protocols }}

{% for property in class.all_mutable_properties %}
{% if property.validate? %}- (void){{ property.setter_name }}({{ property.type_qualified }}){{ property.name }} error:(NSError * _Nullable __autoreleasing * _Nullable)error;
{% else %}@property ({{property.attributes}}) {{ property.type_qualified }} {{ property.name }};
{% endif %}{% if property.collection? %}{% if property.array? %}- (void)add{{ property.element_name_capitalized }}:({{ property.subsequent_generic_types[0] }} _Nonnull){{ property.element_name }}{% if property.validate? %} {{ error_definition }}{% endif %};
- (void)insert{{ property.element_name_capitalized }}:({{ property.subsequent_generic_types[0] }} _Nonnull){{ property.element_name }} atIndex:(NSUInteger)index{% if property.validate? %} {{ error_definition }}{% endif %};
- (void)remove{{ property.element_name_capitalized  }}:({{ property.subsequent_generic_types[0] }} _Nonnull){{ property.element_name }}{% if property.validate? %} {{ error_definition }}{% endif %};
{% elsif property.dictionary? %}- (void)set{{ property.element_name_capitalized }}:({{ property.subsequent_generic_types[1] }} _Nonnull){{ property.element_name }} forKey:({{ property.subsequent_generic_types[0] }} _Nonnull)key{% if property.validate? %} {{ error_definition }}{% endif %};
- (void)remove{{ property.element_name_capitalized }}ForKey:({{ property.subsequent_generic_types[0] }} _Nonnull)key{% if property.validate? %} {{ error_definition }}{% endif %};
{% elsif property.set? %}- (void)add{{ property.element_name_capitalized }}:({{ property.subsequent_generic_types[0] }} _Nonnull){{ property.element_name }}{% if property.validate? %} {{ error_definition }}{% endif %};
- (void)remove{{ property.element_name_capitalized }}:({{ property.subsequent_generic_types[0] }} _Nonnull){{ property.element_name }}{% if property.validate? %} {{ error_definition }}{% endif %};
{% endif %}{% endif %}{% endfor %}
@end

@interface {{ class.mutable_class_name }} : {{ class.class_name }} <{{ class.mutable_class_name }}>

@end{% endif %}

{% if class.supports_builder? %}@interface {{ class.class_name }}Builder : {% if class.parent_have_builder? %}{{ class.parent.class_name }}Builder{% else %}NSObject{% endif %}

{% for property in class.builder_properties %} @property ({{property.builder_attributes}}) {{ property.builder_type_qualified }} {{ property.name }};
{% endfor %}
- ({{ class.class_name }} * {% if class.builder_could_fail? %}_Nullable{% else %}_Nonnull{% endif %})build{% if class.builder_could_fail? %}WithError:(NSError * _Nullable __autoreleasing * _Nullable)error{% endif %};

@end{% endif %}